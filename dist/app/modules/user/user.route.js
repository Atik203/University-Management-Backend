"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.userRoute = void 0;
const express_1 = __importDefault(require("express"));
const auth_1 = require("../../middleware/auth");
const parseRequestBodyData_1 = require("../../middleware/parseRequestBodyData");
const validateRequest_1 = require("../../middleware/validateRequest");
const sendImageToCloudnary_1 = require("../../utils/sendImageToCloudnary");
const admin_zod_validation_1 = require("../admin/admin.zod.validation");
const faculty_validation_zod_1 = require("../faculty/faculty.validation.zod");
const student_validation_zod_1 = require("../student/student.validation.zod");
const user_constant_1 = require("./user.constant");
const user_controller_1 = require("./user.controller");
const user_validation_zod_1 = require("./user.validation.zod");
const router = express_1.default.Router();
router.post('/create-student', sendImageToCloudnary_1.upload.single('file'), parseRequestBodyData_1.parseRequestBodyData, (0, validateRequest_1.validateRequest)(student_validation_zod_1.studentValidations.createStudentValidationSchema), user_controller_1.userController.createStudent);
router.post('/create-faculty', sendImageToCloudnary_1.upload.single('file'), parseRequestBodyData_1.parseRequestBodyData, (0, validateRequest_1.validateRequest)(faculty_validation_zod_1.createFacultyValidationSchema), user_controller_1.userController.createFaculty);
router.post('/create-admin', sendImageToCloudnary_1.upload.single('file'), parseRequestBodyData_1.parseRequestBodyData, (0, validateRequest_1.validateRequest)(admin_zod_validation_1.createAdminValidationSchema), user_controller_1.userController.createAdmin);
router.get('/me', (0, auth_1.auth)(user_constant_1.USER_ROLE.admin, user_constant_1.USER_ROLE.faculty, user_constant_1.USER_ROLE.student), user_controller_1.userController.getMe);
router.post('/change-status/:id', (0, auth_1.auth)(user_constant_1.USER_ROLE.admin), (0, validateRequest_1.validateRequest)(user_validation_zod_1.changeStatusValidationSchema), user_controller_1.userController.changeStatus);
exports.userRoute = router;
